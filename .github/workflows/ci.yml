name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # or your default branch
  pull_request:
    branches:
      - main  # or your default branch

jobs:
  install-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"  # Change this if you're using a different version of Node.js

      - name: Install dependencies
        run: |
          cd client
          npm install

  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd client
          npm install

      - name: Run ESLint
        run: |
          cd client
          npx eslint . --max-warnings=0  # Option to fail if warnings exist

  format:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd client
          npm install

      - name: Check Prettier formatting
        run: |
          cd client
          npx prettier --check .  # You can change this to `--write .` to auto-format

  test:
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          cd client
          npm install

      - name: Run Jest tests
        run: |
          cd client
          npx jest --ci --maxWorkers=2 --verbose
